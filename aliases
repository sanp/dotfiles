# Easier navigation: .., ..., ~ and -
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias -- -="cd -"

# Shortcuts
alias d="cd ~/Desktop"
alias dl="cd ~/Downloads"
alias dot="cd ~/dotfiles"
alias cl="clear"
alias p="python"

# Sourcing
alias so="source"
# Source the .profile
alias sop="source ~/.profile"

# programs
alias mvim='open -a "MacVim"'
# Use nvim by default
alias vim="nvim"
alias oldvim="\vim"

# Start psql
alias start_psql='pg_ctl -D /usr/local/var/postgres -l logfile start'
alias stop_psql='pg_ctl -D /usr/local/var/postgres -l logfile stop'

# Always use color when ls-ing
alias ls='ls -GFh'
# List all files in long format
alias l="ls -l"
# Long format and hidden files
alias la="ls -al"
# List only directories
alias lsd='ls -l | grep "^d"'
# List all files, folders, and subfolders and files
alias lr='ls -R'

# `cat` with beautiful colors. requires Pygments installed.
# Use pcat rather than remapping cat because pygmentize only works on single
# files. Still want ability to merge multiple files using 'cat' which you can't
# do with pygmentize
alias pcat='pygmentize -O style=monokai -f console256 -g'
pygmentize_fn() {
  function=${1}
  file=${2}
  pcat ${file} | ${function} -r
}
alias pless='pygmentize_fn less'
alias pmore='pygmentize_fn more'

# CD into the root of a git repo
alias gr='[ ! -z `git rev-parse --show-cdup` ] && cd `git rev-parse --show-cdup || pwd`'

# Get file size
alias fs="stat -f \"%z bytes\""

# Hide/show all desktop icons (useful when presenting)
alias hidedesktop="defaults write com.apple.finder CreateDesktop -bool false && killall Finder"
alias showdesktop="defaults write com.apple.finder CreateDesktop -bool true && killall Finder"

# If terminal takes a long time to load, delete the *.asl log files and it will
# be much snappier again: http://forums.macrumors.com/showthread.php?t=987949
alias cllogs="sudo rm -f /private/var/log/asl/*.asl"

# List open ports
alias lsports='lsof -i -P | grep -i "listen"'

# Start/stop the psql server
alias psql_status='pg_ctl -D /usr/local/var/postgres -l logfile status'
alias psql_start='pg_ctl -D /usr/local/var/postgres -l logfile start'
alias psql_stop='pg_ctl -D /usr/local/var/postgres -l logfile stop'

##
# Tmux
##

# Tab completion for tmux sessions.
# Quickly open new tmux sessions in your projects dir.
# https://gist.github.com/ryandotsmith/1396797
#  
# Setup:
# Source this code in your bash shell.
# Update the code_dir var with the root directory of your source code.
#  
# Usage:
#  
# Use the tab to open an existing session.
# $ ta [TAB]
# 
# Arguments that are passed to ta will be used to create a new session.
# ta will open a new tmux session and set the default path to the found dir. 
# $ ta payments
# $ pwd
# /code_dir/payments 
ta()
{
  local session_name="$1"
  tmux attach-session -t "$session_name"
  if [ $? -ne 0 ]; then
    local code_dir="~"
    local list_of_dirs=( $(find "$code_dir" -name "$session_name" -type d ) )
    local first_found="${dirs[0]}"
    cd "$first_found"
    echo "ta() is creating new tmux session with name=$session_name"
    tmux new-session -d -s "$session_name"
    echo "ta() is setting default path with dir=$first_found"
    tmux set default-path "$first_found"
    tmux attach-session -t "$session_name"
  fi
}
_ta()
{
  COMPREPLY=()
  local session="${COMP_WORDS[COMP_CWORD]}"
  COMPREPLY=( $(compgen -W "$(tmux list-sessions 2>/dev/null | awk -F: '{ print $1 }')" -- "$session") )
}
complete -F _ta ta

# List tmux sessions
alias tls='tmux ls'
# Start a new tmux session
alias tns='tmux new -s'
# Kill tmux session
alias tk='tmux kill-session -t'

# List all connections in ssh config file
alias lssh='cat $HOME/.ssh/config | grep Host'

# Default `top` command to sort by CPU usage, not MEM
alias top="top -o cpu"

# Download mp3 audio files from youtube
alias ytdl-mp3="youtube-dl -x --audio-quality 0 --audio-format mp3"

alias taw="tmux attach -t work || tmux new -s work"

# Prevent SSH client from passing TERM variable to remote server
alias ssh="TERM=xterm ssh"

alias pyri="pip install -r ~/.global_python_requirements"
