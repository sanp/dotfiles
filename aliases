# Easier navigation: .., ..., ~ and -
alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias -- -="cd -"

# Shortcuts
alias d="cd ~/Desktop"
alias dl="cd ~/Downloads"
# alias dot="cd ~/dotfiles"
alias cl="clear"
alias p="python"

# Sourcing
alias so="source"
# Source the zshrc
alias sop="source ~/.zshrc"

# programs
alias mvim='open -a "MacVim"'
# Use nvim by default
alias vim="nvim"
alias oldvim="\vim"

# Start psql
alias start_psql='pg_ctl -D /usr/local/var/postgres -l logfile start'
alias stop_psql='pg_ctl -D /usr/local/var/postgres -l logfile stop'

# Always use color when ls-ing
alias ls='ls -GFh'
# List all files in long format
alias l="ls -l"
# Long format and hidden files
alias la="ls -al"
# List only directories
alias lsd='ls -l | grep "^d"'
# Grep current dir
alias lg='ls -l | grep '
# Grep history
alias hg='history | grep '

# `cat` with beautiful colors. requires Pygments installed.
# Use pcat rather than remapping cat because pygmentize only works on single
# files. Still want ability to merge multiple files using 'cat' which you can't
# do with pygmentize
alias pcat='pygmentize -O style=monokai -f console256 -g'
pygmentize_fn() {
  function=${1}
  file=${2}
  pcat ${file} | ${function} -r
}
alias pless='pygmentize_fn less'
alias pmore='pygmentize_fn more'

# CD into the root of a git repo
alias gr='[ ! -z `git rev-parse --show-cdup` ] && cd `git rev-parse --show-cdup || pwd`'
alias gcm='git commit -m'
alias gpu='git push -u origin head'
alias gfp='git fetch -p'
alias gpn='git push --no-verify'
# Show tags with full messages, sorted with latest on top
alias gtl='git tag -n99 --sort=-v:refname'

# String replace across all files in a git repo
git_replace() {
  local old_str
  local new_str
  old_str=$1
  new_str=$2
  git grep -l "${old_str}" | xargs sed -i '' -e "s/${old_str}/${new_str}/g"
}
alias grp="git_replace"

# Get file size
alias fs="stat -f \"%z bytes\""

# Hide/show all desktop icons (useful when presenting)
alias hidedesktop="defaults write com.apple.finder CreateDesktop -bool false && killall Finder"
alias showdesktop="defaults write com.apple.finder CreateDesktop -bool true && killall Finder"

# If terminal takes a long time to load, delete the *.asl log files and it will
# be much snappier again: http://forums.macrumors.com/showthread.php?t=987949
alias cllogs="sudo rm -f /private/var/log/asl/*.asl"

# List open ports
alias lsports='lsof -i -P | grep -i "listen"'

# Start/stop the psql server
alias psql_status='pg_ctl -D /usr/local/var/postgres -l logfile status'
alias psql_start='pg_ctl -D /usr/local/var/postgres -l logfile start'
alias psql_stop='pg_ctl -D /usr/local/var/postgres -l logfile stop'

##
# Tmux
##

# The following snippet is necessary in bash, not zsh.
# # Tab completion for tmux sessions.
# # Quickly open new tmux sessions in your projects dir.
# # https://gist.github.com/ryandotsmith/1396797
# #
# # Setup:
# # Source this code in your bash shell.
# # Update the code_dir var with the root directory of your source code.
# #
# # Usage:
# #
# # Use the tab to open an existing session.
# # $ ta [TAB]
# #
# # Arguments that are passed to ta will be used to create a new session.
# # ta will open a new tmux session and set the default path to the found dir.
# # $ ta payments
# # $ pwd
# # /code_dir/payments
# ta()
# {
#   local session_name="$1"
#   tmux attach-session -t "$session_name"
#   if [ $? -ne 0 ]; then
#     local code_dir="~"
#     local list_of_dirs=( $(find "$code_dir" -name "$session_name" -type d ) )
#     local first_found="${dirs[0]}"
#     cd "$first_found"
#     echo "ta() is creating new tmux session with name=$session_name"
#     tmux new-session -d -s "$session_name"
#     echo "ta() is setting default path with dir=$first_found"
#     tmux set default-path "$first_found"
#     tmux attach-session -t "$session_name"
#   fi
# }
# _ta()
# {
#   COMPREPLY=()
#   local session="${COMP_WORDS[COMP_CWORD]}"
#   COMPREPLY=( $(compgen -W "$(tmux list-sessions 2>/dev/null | awk -F: '{ print $1 }')" -- "$session") )
# }
# complete -F _ta ta

# Attach a session
alias ta="tmux attach -t"
# List tmux sessions
alias tls='tmux ls'
# Start a new tmux session
alias tns='tmux new -s'
# Kill tmux session
alias tk='tmux kill-session -t'
# Attach or create the work session
alias taw="tmux attach -t work || tmux new -s work"
# Kill-server
alias tks="tmux kill-server"

# List all connections in ssh config file
alias lssh='cat $HOME/.ssh/config | grep Host'

# Default `top` command to sort by CPU usage, not MEM
alias top="top -o cpu"

# Download mp3 audio files from youtube
alias ytdl-mp3="youtube-dl -x --audio-quality 0 --audio-format mp3"

# Prevent SSH client from passing TERM variable to remote server
alias ssh="TERM=xterm ssh"

# Install global requirements
alias pyri="pip install --upgrade pip wheel setuptools && pip install -r ~/.global_python_requirements"

# Always show colors with tree
alias tree="tree -C"
# Tree a python project directory without seeing all the unnecessary stuff
alias pytree="tree -I '*.egg-info|__pycache__'"

# Update and upgrade brew
alias bru="brew update && brew upgrade"

##
# Taskwarrior and Timewarrior
##
alias w="task"
alias wl="task list"
# Usage: wa +footag
alias wa="task add"
alias wan="task annotate"
alias wd="task done"
alias wrm="task delete"
alias wm="task modify"
alias wp="task projects"
alias wt="task tags"
# # You can add tasks and optionally wait or schedule them:
# # wa Send xmas cards wait:2020-12-01 schedule:2020-12-15 until:2020-12-25
alias ww="task waiting"
alias wcd="task context define"
alias wcrm="task context delete"
alias wcl="task context list"
# Show current context
alias wcs="task context show"
# Switch to context
alias wcon="task context"
# Clear context
alias wcc="task context none"
# Pull in information from all external services bugwarrior is tracking.
alias bup="bugwarrior-pull"

# ex - archive extractor
# Taken from: https://github.com/ChrisTitusTech/zsh/blob/master/.zsh/aliasrc
# usage: ex <file>
ex () {
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1     ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

# Kill
alias kn="kill -9"

# Terraform
alias tf="terraform"
alias tfi="terraform init"
alias tfv="terraform validate"
alias tfl="tflint"
alias tfp="terraform plan"
alias tfa="terraform apply"
alias tfd="terraform destroy"
alias tfo="terraform output"
alias tfsl="terraform state list"
alias tfw="terraform workspace"
alias tfws="terraform workspace select"
alias tfwl="terraform workspace list"
alias tfu="terraform get -update"

# Terragrunt
alias tg="terragrunt"
alias tgv="terragrunt validate"
alias tgp="terragrunt plan"
alias tga="terragrunt apply"
alias tgd="terragrunt destroy"
alias tgo="terragrunt output"
alias tgsl="terragrunt state list"
alias tgw="terragrunt workspace"

# Update terragrunt sources
alias tgu="terragrunt init --terragrunt-source-update"

# Terragrunt all commands
alias tgpp="terragrunt plan-all"
alias tgaa="terragrunt apply-all"
alias tgdd="terragrunt destroy-all"

# TODO: move this to bin
alias ca-pip-login="aws --profile root --region us-east-1 codeartifact login --tool pip --domain-owner 609131769936 --domain dna-code-artifact --repository dna-code-artifact"
alias ca-twine-login="aws --profile root --region us-east-1 codeartifact login --tool twine --domain-owner 609131769936 --domain dna-code-artifact --repository dna-code-artifact"
